workspace(name = "open_thienhang_com")

load("@bazel_tools//tools/build_defs/repo:http.bzl", "http_archive")
load("@bazel_tools//tools/build_defs/repo:git.bzl", "git_repository")
#

http_archive(
    name = "apple_rules_lint",
    sha256 = "8feab4b08a958b10cb2abb7f516652cd770b582b36af6477884b3bba1f2f0726",
    strip_prefix = "apple_rules_lint-0.1.1",
    url = "https://github.com/apple/apple_rules_lint/archive/0.1.1.zip",
)

load("@apple_rules_lint//lint:repositories.bzl", "lint_deps")

lint_deps()

load("@apple_rules_lint//lint:setup.bzl", "lint_setup")



# go
http_archive(
    name = "io_bazel_rules_go",
    sha256 = "685052b498b6ddfe562ca7a97736741d87916fe536623afb7da2824c0211c369",
    urls = [
        "https://mirror.bazel.build/github.com/bazelbuild/rules_go/releases/download/v0.33.0/rules_go-v0.33.0.zip",
        "https://github.com/bazelbuild/rules_go/releases/download/v0.33.0/rules_go-v0.33.0.zip",
    ],
)

load("@io_bazel_rules_go//go:deps.bzl", "go_register_toolchains", "go_rules_dependencies")

go_rules_dependencies()

go_register_toolchains(version = "1.19.4")

# Python
http_archive(
    name = "rules_python",
    sha256 = "8c15896f6686beb5c631a4459a3aa8392daccaab805ea899c9d14215074b60ef",
    strip_prefix = "rules_python-0.17.3",
    url = "https://github.com/bazelbuild/rules_python/archive/refs/tags/0.17.3.tar.gz",
)

local_repository(
    name = "py_libs",
    path = "python/libs",
)

new_local_repository(
    name = "requirements",
    path = "requirements",
)

load("@rules_python//python:defs.bzl", "py_binary", "py_test")

#
http_archive(
    name = "bazel_skylib",
    sha256 = "c6966ec828da198c5d9adbaa94c05e3a1c7f21bd012a0b29ba8ddbccb2c93b0d",
    urls = [
        "https://github.com/bazelbuild/bazel-skylib/releases/download/1.1.1/bazel-skylib-1.1.1.tar.gz",
        "https://mirror.bazel.build/github.com/bazelbuild/bazel-skylib/releases/download/1.1.1/bazel-skylib-1.1.1.tar.gz",
    ],
)


load("@rules_python//python/pip_install:repositories.bzl", "pip_install_dependencies")

pip_install_dependencies()
load("@rules_python//python:repositories.bzl", "python_register_multi_toolchains")

# python_register_multi_toolchains(
#     name = "python",
#     default_version = "3.9",
#     python_versions = [
#         "3.8",
#         "3.9",
#     ],
# )

# load("@python//:pip.bzl", "multi_pip_parse")
# load("@python//3.8:defs.bzl", interpreter_3_8 = "interpreter")
# load("@python//3.9:defs.bzl", interpreter_3_9 = "interpreter")

# multi_pip_parse(
#     name = "gpip",
#     default_version = "3.9",
#     python_interpreter_target = {
#         "3.8": interpreter_3_8,
#         "3.9": interpreter_3_9,
#     },
#     requirements_lock = {
#         "3.8": "//python/requirements:requirements_lock_3_8.txt",
#         "3.9": "//python/requirements:requirements_lock_3_9.txt",
#     },
# )



load("@rules_python//python:pip.bzl", "pip_parse")
pip_parse(
   name = "gpip",
   requirements_lock = "//python/requirements:requirements_lock_3_9.txt",
)

load("@gpip//:requirements.bzl", "install_deps")
install_deps()

http_archive(
    name = "rules_proto_grpc",
    sha256 = "fb7fc7a3c19a92b2f15ed7c4ffb2983e956625c1436f57a3430b897ba9864059",
    strip_prefix = "rules_proto_grpc-4.3.0",
    urls = ["https://github.com/rules-proto-grpc/rules_proto_grpc/archive/4.3.0.tar.gz"],
)

load(
    "@rules_proto_grpc//:repositories.bzl", 
    "rules_proto_grpc_toolchains", 
    "rules_proto_grpc_repos"
)
rules_proto_grpc_toolchains()
rules_proto_grpc_repos()

load(
    "@rules_proto//proto:repositories.bzl", 
    "rules_proto_dependencies", 
    "rules_proto_toolchains"
)
rules_proto_dependencies()
rules_proto_toolchains()


load("@rules_proto_grpc//python:repositories.bzl", "python_repos")
python_repos()

load("@com_github_grpc_grpc//bazel:grpc_deps.bzl", "grpc_deps")

grpc_deps()


# gazelle
http_archive(
    name = "bazel_gazelle",
    sha256 = "501deb3d5695ab658e82f6f6f549ba681ea3ca2a5fb7911154b5aa45596183fa",
    urls = [
        "https://mirror.bazel.build/github.com/bazelbuild/bazel-gazelle/releases/download/v0.26.0/bazel-gazelle-v0.26.0.tar.gz",
        "https://github.com/bazelbuild/bazel-gazelle/releases/download/v0.26.0/bazel-gazelle-v0.26.0.tar.gz",
    ],
)

load("@bazel_gazelle//:deps.bzl", "gazelle_dependencies")
load("//:deps.bzl", "go_dependencies")

# gazelle:repository_macro deps.bzl%go_dependencies
go_dependencies()

gazelle_dependencies()

# docker 
http_archive(
    name = "io_bazel_rules_docker",
    sha256 = "4349f2b0b45c860dd2ffe18802e9f79183806af93ce5921fb12cbd6c07ab69a8",
    strip_prefix = "rules_docker-0.21.0",
    urls = ["https://github.com/bazelbuild/rules_docker/releases/download/v0.21.0/rules_docker-v0.21.0.tar.gz"],
)

load(
    "@io_bazel_rules_docker//repositories:repositories.bzl",
    container_repositories = "repositories",
)

container_repositories()

load(
    "@io_bazel_rules_docker//repositories:deps.bzl",
    container_deps = "deps",
)

container_deps()

load(
    "@io_bazel_rules_docker//container:container.bzl",
    "container_pull",
)

load(
    "@io_bazel_rules_docker//go:image.bzl",
    _go_image_repos = "repositories",
)

_go_image_repos()

container_pull(
    name = "go_base",
    # 'tag' is also supported, but digest is encouraged for reproducibility
    # NOTE: keep updating this image for security reason
    # Check new version at:
    # https://github.com/bazelbuild/rules_docker/blob/master/go/go.bzl
    # Note that we have to use the `debug` tag to get a shell. Otherwise, OrcFileWriter won't work
    # Last update: 2021-12-01 22:44 +0200
    digest = "sha256:4e644c5d3a7341cf7ca568fe33356734601ad90d6be01a07090cf48c4f329371",
    registry = "gcr.io",
    repository = "distroless/base",
)

container_pull(
    name = "py_base",
    #https://github.com/bazelbuild/rules_docker/blob/master/python3/python3.bzl
    digest = "sha256:d5a717649fd93ea5b9c430d7f84e4c37ba219eb53bd73ed1d4a5a98e9edd84a7",
    registry = "gcr.io",
    repository = "distroless/python3-debian10",
    tag = "latest",
)
load(
    "@io_bazel_rules_docker//go:image.bzl",
    _go_image_repos = "repositories",
)

_go_image_repos()

load(
    "@io_bazel_rules_docker//python3:image.bzl",
    _py_image_repos = "repositories",
)

_py_image_repos()

load(
    "@io_bazel_rules_docker//python3:image.bzl",
    _py3_image_repos = "repositories",
)

_py3_image_repos()

load("@rules_python//python:pip.bzl", "pip_install")
load("@rules_python//python:repositories.bzl", "python_register_toolchains")
register_toolchains("//:python_toolchain_x86_64")
pip_install(
    requirements = "//:requirements.txt",
)
# Build and push container:
# chmod +x "./dockerfiles/go-grpc/docker_build.sh"
# ./dockerfiles/go-grpc/docker_build.sh --user

container_pull(
    name = "grpc_go_base",
    digest = "sha256:91ec41dd46899f36d4919c7e4ddab6814cf6481b5856fcd316864a807419d877",
    registry = "asia.gcr.io",
    repository = "",
)


container_pull(
    name = "alpine_linux_amd64_tar",
    digest = "sha256:396acf693e8ee9a839b7e658c46623458d5b404aeacede9be479993e688ab8e5",
    registry = "index.docker.io",
    repository = "library/alpine",
    tag = "3.15",
)
# Build and push container:
# chmod +x "./dockerfiles/py-grpc/docker_build.sh"
# ./dockerfiles/py-grpc/docker_build.sh --user

container_pull(
    name = "grpc_py_base",
    digest = "sha256:1dcaa65130e9549247bdd491a58145f04f9aaf59e049d99cc1f9f57275ccb52a",
    registry = "asia.gcr.io",
    repository = "",
)

# protobuf
http_archive(
    name = "com_google_protobuf",
    sha256 = "d0f5f605d0d656007ce6c8b5a82df3037e1d8fe8b121ed42e536f569dec16113",
    strip_prefix = "protobuf-3.14.0",
    urls = [
        "https://mirror.bazel.build/github.com/protocolbuffers/protobuf/archive/v3.14.0.tar.gz",
        "https://github.com/protocolbuffers/protobuf/archive/v3.14.0.tar.gz",
    ],
)

load("@com_google_protobuf//:protobuf_deps.bzl", "protobuf_deps")

protobuf_deps()